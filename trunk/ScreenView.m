//
//  ScreenView.m
//  InfoNes iPhone
//
//  Created by Steve White on 8/05/07.
//  Copyright 2007 Steve White. All rights reserved.
//
#import "ScreenView.h"

static ScreenView *sharedInstance = nil;
void updateScreen() {
	[sharedInstance performSelectorOnMainThread:@selector(updateScreen) withObject:nil waitUntilDone: NO];
}

@implementation ScreenView 
- (id)initWithFrame:(CGRect)frame {
	if ((self == [super initWithFrame:frame])!=nil) {
		sharedInstance = self;
		mutex = [[NSLock alloc] init];

		unsigned int		size;

		unsigned char lookupTable[192] = {
			0x68,0x68,0x68,0x00,0x40,0x80,0x00,0x00,0x80,0x40,0x00,0x80,
			0x80,0x00,0x80,0x80,0x00,0x40,0x80,0x00,0x00,0x55,0x00,0x00,
			0x40,0x40,0x00,0x33,0x50,0x00,0x00,0x50,0x00,0x00,0x50,0x00,
			0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x98,0x98,0x98,0x00,0x80,0xC0,0x40,0x40,0xC0,0x80,0x00,0xC0,
			0xC0,0x00,0xC0,0xC0,0x00,0x80,0xC0,0x20,0x20,0xC0,0x40,0x00,
			0x80,0x80,0x00,0x55,0x80,0x00,0x00,0x80,0x00,0x33,0x80,0x33,
			0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0xD0,0xD0,0xD0,0x40,0xC0,0xFF,0x80,0x80,0xFF,0xC0,0x40,0xFF,
			0xFF,0x00,0xFF,0xFF,0x40,0xC0,0xFF,0x50,0x50,0xFF,0x80,0x40,
			0xC0,0xC0,0x00,0x80,0xC0,0x00,0x00,0xC0,0x00,0x55,0xC0,0x55,
			0x00,0xC0,0xC0,0x33,0x33,0x33,0x00,0x00,0x00,0x00,0x00,0x00,
			0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xC0,0xC0,0xFF,0xFF,0x80,0xFF,
			0xFF,0x40,0xFF,0xFF,0x80,0xFF,0xFF,0x80,0x80,0xFF,0xC0,0x80,
			0xFF,0xFF,0x40,0xC0,0xFF,0x40,0x40,0xFF,0x40,0xAA,0xFF,0xAA,
			0x40,0xFF,0xFF,0x99,0x99,0x99,0x00,0x00,0x00,0x00,0x00,0x00
		};

		colors   = CGColorSpaceCreateWithName(kCGColorSpaceGenericRGB);
		colorSpace = CGColorSpaceCreateIndexed(colors, 63, lookupTable);
		size = 256 * 240;
		screen   = (unsigned char*)malloc(size);
		provider = CGDataProviderCreateWithData(NULL, screen, size, NULL);

		unsigned char *c;
		c = screen;
		int i;
		for (i=0; i<(256*240); i++) {
			*c++ = 0;
		}
	}
	return self;
}
- (void)updateScreen {
	[sharedInstance setNeedsDisplay];
	[sharedInstance forceDisplayIfNeeded];

}
- (void)dealloc {
	//CGImageRelease(screenImage);
	CGDataProviderRelease(provider);
	CGColorSpaceRelease(colorSpace);
	CGColorSpaceRelease(colors);
	free(screen);
	[super dealloc];
}

- (void)drawRect:(CGRect)rect{
//NSLog(@"drawRect: %i", *screen);
	[self lock];
	CGImageRef screenImage = CGImageCreate(
		256,		/* width */
		240,		/* height */
		8,		/* bitsPerComponent */
		8,		/* bitsPerPixel */
		256,		/* bytesPerRow */
		colorSpace,		/* colorspace */
		kCGImageAlphaNoneSkipFirst,
		provider,
		NULL,
		0,
		kCGRenderingIntentDefault
	);
	CGContextRef ctx = UICurrentContext();
	CGContextDrawImage(ctx, CGRectMake(0,0,256,240), screenImage);
	CGContextFlush(ctx);
	CGImageRelease (screenImage);
	[self unlock];
}

- (void)lock {
	[mutex lock];
}

- (void)unlock {
	[mutex unlock];
}
@end
